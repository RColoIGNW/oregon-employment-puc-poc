steps:
  # Install NPM
  - name: node:12.16.2-alpine3.11
    dir: 'server'
    entrypoint: npm
    args: ['install']

  # Run Build
  - name: node:12.16.2-alpine3.11
    dir: 'server'
    entrypoint: npm
    args: ['run', 'build']
    env:
      - NODE_ENV=production

  # Run Prune
  - name: node:12.16.2-alpine3.11
    dir: 'server'
    entrypoint: npm
    args: ['prune', '--production']

  # View Directory
#  - name: node:12.16.2-alpine3.11
#    dir: 'server'
#    entrypoint: "bash"
#    args: [ '-c', 'ls -la']

  # build container
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', './server/docker/Server.Dockerfile', '-t', 'gcr.io/$PROJECT_ID/oed-poc-server:$COMMIT_SHA', '.']

   # Run Test
  - name: node:12.16.2-alpine3.11
    dir: 'server'
    entrypoint: npm
    args: ['test']

  # push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/oed-poc-server:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'oed-poc-server'
      - '--image'
      - 'gcr.io/$PROJECT_ID/oed-poc-server:$COMMIT_SHA'
      - '--region'
      - 'us-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
